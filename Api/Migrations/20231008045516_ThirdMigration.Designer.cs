// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamFive.DataStorage;

#nullable disable

namespace TeamFive.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20231008045516_ThirdMigration")]
    partial class ThirdMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MyApp.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Expiry")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("TeamFive.Models.Instrument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InstrumentName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Instruments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "String Instruments",
                            CreatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 478, DateTimeKind.Utc).AddTicks(1410),
                            InstrumentName = "Acoustic Guitar",
                            UpdatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 478, DateTimeKind.Utc).AddTicks(1413)
                        },
                        new
                        {
                            Id = 2,
                            Category = "String Instruments",
                            CreatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 478, DateTimeKind.Utc).AddTicks(1544),
                            InstrumentName = "Electric Guitar",
                            UpdatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 478, DateTimeKind.Utc).AddTicks(1544)
                        },
                        new
                        {
                            Id = 3,
                            Category = "String Instruments",
                            CreatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 478, DateTimeKind.Utc).AddTicks(1560),
                            InstrumentName = "Violin",
                            UpdatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 478, DateTimeKind.Utc).AddTicks(1560)
                        },
                        new
                        {
                            Id = 4,
                            Category = "Woodwind Instruments",
                            CreatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 478, DateTimeKind.Utc).AddTicks(1574),
                            InstrumentName = "Flute",
                            UpdatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 478, DateTimeKind.Utc).AddTicks(1574)
                        },
                        new
                        {
                            Id = 5,
                            Category = "Woodwind Instruments",
                            CreatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 478, DateTimeKind.Utc).AddTicks(1586),
                            InstrumentName = "Clarinet",
                            UpdatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 478, DateTimeKind.Utc).AddTicks(1586)
                        },
                        new
                        {
                            Id = 6,
                            Category = "Woodwind Instruments",
                            CreatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 478, DateTimeKind.Utc).AddTicks(1602),
                            InstrumentName = "Saxophone",
                            UpdatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 478, DateTimeKind.Utc).AddTicks(1602)
                        });
                });

            modelBuilder.Entity("TeamFive.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 482, DateTimeKind.Utc).AddTicks(7337),
                            Email = "a@email.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "AQAAAAIAAYagAAAAEHL0ZeX4HxYztq+6jf/dos1m9sr+xZH1DPHvOHrcMApuP41tuXRyDo/1Fgz5yVut3A==",
                            UpdatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 482, DateTimeKind.Utc).AddTicks(7341)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 568, DateTimeKind.Utc).AddTicks(6292),
                            Email = "b@email.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Password = "AQAAAAIAAYagAAAAEFPXCijNv4q7DQSDp3l2PruE03QNfDsGOGpEll9o7uYBMgnhl1aK8ugxNtfm053xUA==",
                            UpdatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 568, DateTimeKind.Utc).AddTicks(6294)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 643, DateTimeKind.Utc).AddTicks(7965),
                            Email = "c@email.com",
                            FirstName = "Alice",
                            LastName = "Johnson",
                            Password = "AQAAAAIAAYagAAAAECElLLHzdxyIWR7WjJh7oSe8rfxBLhu3+7XopMjOVf89NwY1eZz6IwVEghEMwP419w==",
                            UpdatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 643, DateTimeKind.Utc).AddTicks(7969)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 717, DateTimeKind.Utc).AddTicks(7319),
                            Email = "d@email.com",
                            FirstName = "Bob",
                            LastName = "Williams",
                            Password = "AQAAAAIAAYagAAAAECLlAvpqv9IiRI5Xc5KgJLAywnxK9gyaB0dQ1SSUiE90oAOeSRVN3JECBvcBuEI3XA==",
                            UpdatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 717, DateTimeKind.Utc).AddTicks(7322)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 796, DateTimeKind.Utc).AddTicks(4238),
                            Email = "e@email.com",
                            FirstName = "Eve",
                            LastName = "Davis",
                            Password = "AQAAAAIAAYagAAAAECkheQ4RZ8o+tp0iX6Vnxr9vUIeVq0/RqGHHLP3H+0z0Ixf/efjxMYyVUXa+sgG5hA==",
                            UpdatedAt = new DateTime(2023, 10, 8, 4, 55, 15, 796, DateTimeKind.Utc).AddTicks(4240)
                        });
                });

            modelBuilder.Entity("MyApp.Models.RefreshToken", b =>
                {
                    b.HasOne("TeamFive.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
